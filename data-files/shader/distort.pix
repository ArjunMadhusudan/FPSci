#version 460

#include <g3dmath.glsl>

uniform sampler2D iChannel0;
uniform int iFrame;
uniform float iTime;
uniform float iTimeDelta;
uniform vec2 iMouse;

out vec3 result;

void main() {
	vec2 relativePos = (gl_FragCoord.xy / g3d_FragCoordExtent.xy - 0.5) * 2.0;

	// Simple cylindrical distortion:
	const float stretch = 0.5;
	const float deadZone = 0.5;
	if (abs(relativePos.x) >= deadZone) {
		relativePos.x = ((1.0 - deadZone) * pow((abs(relativePos.x) - deadZone) / (1.0 - deadZone), stretch + 1) + deadZone) * sign(relativePos.x);
	}

	result = texture(iChannel0, relativePos * 0.5 + 0.5).rgb;
}